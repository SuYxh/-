// reset
* {
    box-sizing: border-box; 
    outline: none;
}

html {
    font-size: 13px;
} 

body {
    margin:0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}

a {
    color: #999; 
}



// 颜色 如果定义的颜色与 颜色本身有冲突(单词一样)，最好用把定义的颜色引起来
// 可以 理解为 对象
$colors:(
    "primary":#db9e3f,
    "white":#fff,
    "black":#000,
    "dark":#222,
    "dark-1":#343440,
    "grey":#999,
    "grey-1":#666,
    "light":#f9f9f9,
);

@each $colorKey,$color in $colors {
    // 文本颜色
    .text-#{$colorKey} {
        color: $color
    }
    // 背景颜色
    .bg-#{$colorKey} {
        background-color: $color
    }
}


// 文本
// 定义对齐方式  理解为 数组
@each $var in (left,center,right) {
    .text-#{$var} {
        text-align:$var
    }
}

// font-size
$base-font-size:1rem;
$font-sizes:(
    xss:0.615385, // 8px
    xs:0.769231,  // 10px
    sm:0.923077,  // 12px
    md:1,         //13px
    lg:1.076923,  // 14px
    xl:1.230769,  // 16px
);

@each $sizeKey,$size in $font-sizes {
    // 文本颜色
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}


// flex
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

$flex-jc:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,

);

@each $key,$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}


$flex-ai:(
    start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch，

);

@each $key,$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex:1
}


// 边距
// bootstrap 方式：
//  0-5 : 表示 级别
//  .mt-1 => margin-top  .pb-2 

$spacing-types:(
    m:margin,
    p:padding,
);

$spacing-directions:(
    // 上右下左的顺序
    t:top,
    r:right,
    b:bottom,
    l:left,
);

$spacing-base-size:1rem;

$spacing-sizes:(
    0:0,
    1:0.25,
    2:0.5,
    3:1,
    4:1.5,
    5:3,
);

// 循环嵌套
// m-0, mx-0
@each $typeKey, $type in $spacing-types {
    // .m-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
        #{$type}: $size * $spacing-base-size;
      }
    }
    // .mx-1 , .my-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}x-#{$sizeKey} {
        #{$type}-left: $size * $spacing-base-size;
        #{$type}-right: $size * $spacing-base-size;
      }
      .#{$typeKey}y-#{$sizeKey} {
        #{$type}-top: $size * $spacing-base-size;
        #{$type}-bottom: $size * $spacing-base-size;
      }
    }
    // .mt-1
    @each $directionKey, $direction in $spacing-directions {
      @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}#{$directionKey}-#{$sizeKey} {
          #{$type}-#{$direction}: $size * $spacing-base-size;
        }
      }
    }
  }
// @each $typeKey,$type in $spacing-types {
//     // 原始代码： .#{$typeKey} {#{$type}:0} 
//     // 循环方位
//     @each $directionKey,$direction in $spacing-directions {
//         // 循环大小
//         @each $sizeKey,$size in $spacing-sizes {
//             // 想要的效果： .mt-1 { margin-top:0.25rem }
//             .#{$typeKey}#{$directionKey}-#{$sizeKey} {
//                 #{$type}-#{$direction}: $size * $spacing-base-size;
//             }
//         }
//     }
//     .#{$typeKey} {
//         #{$type}:0
//     }
// }


// 按钮 map-get($font-sizes, 'sm') 表示从 之前定义的去选择一个
.btn {
    border:none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes, 'sm') * $base-font-size;
    padding: 0.2rem 0.6rem;
    &.btn-lg {
      display: flex;
      justify-content: center;
      align-items: center;
      i {
        color: map-get($colors, 'primary');
        font-weight: bold;
        font-size: 1.5rem;
        margin-right: 0.5rem;
      }
      background: map-get($colors, 'white-1');
      border: 1px solid map-get($colors, 'white-2');
      padding: 0.8rem 1rem;
      font-size: 1rem;
    }
  }

//   导航栏
.nav {
    display: flex;
    .nav-item {
      border-bottom: 3px solid transparent;
      padding-bottom: 0.2rem;
      &.active {
        color: map-get($colors, 'primary');
        border-bottom-color: map-get($colors, 'primary');
      }
    }
    &.nav-inverse {
      .nav-item {
        color: map-get($colors, 'white');
        &.active {
          border-bottom-color: map-get($colors, 'white');
        }
      }
    }
    
  }